#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4961
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="iPattern")]
	public partial class DataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertanalysis_result(analysis_result instance);
    partial void Updateanalysis_result(analysis_result instance);
    partial void Deleteanalysis_result(analysis_result instance);
    partial void Insertanalysis_input(analysis_input instance);
    partial void Updateanalysis_input(analysis_input instance);
    partial void Deleteanalysis_input(analysis_input instance);
    partial void Insertanalysis_result_item(analysis_result_item instance);
    partial void Updateanalysis_result_item(analysis_result_item instance);
    partial void Deleteanalysis_result_item(analysis_result_item instance);
    partial void Insertinput_meta_data(input_meta_data instance);
    partial void Updateinput_meta_data(input_meta_data instance);
    partial void Deleteinput_meta_data(input_meta_data instance);
    partial void Insertinput_word_header(input_word_header instance);
    partial void Updateinput_word_header(input_word_header instance);
    partial void Deleteinput_word_header(input_word_header instance);
    partial void Insertmeta_data_key(meta_data_key instance);
    partial void Updatemeta_data_key(meta_data_key instance);
    partial void Deletemeta_data_key(meta_data_key instance);
    partial void Insertmeta_data_value(meta_data_value instance);
    partial void Updatemeta_data_value(meta_data_value instance);
    partial void Deletemeta_data_value(meta_data_value instance);
    partial void Insertinformation_type(information_type instance);
    partial void Updateinformation_type(information_type instance);
    partial void Deleteinformation_type(information_type instance);
    #endregion
		
		public DataClassesDataContext() : 
				base(global::DAL.Properties.Settings.Default.iPatternConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<analysis_result> analysis_results
		{
			get
			{
				return this.GetTable<analysis_result>();
			}
		}
		
		public System.Data.Linq.Table<analysis_input> analysis_inputs
		{
			get
			{
				return this.GetTable<analysis_input>();
			}
		}
		
		public System.Data.Linq.Table<analysis_result_item> analysis_result_items
		{
			get
			{
				return this.GetTable<analysis_result_item>();
			}
		}
		
		public System.Data.Linq.Table<input_meta_data> input_meta_datas
		{
			get
			{
				return this.GetTable<input_meta_data>();
			}
		}
		
		public System.Data.Linq.Table<input_word_header> input_word_headers
		{
			get
			{
				return this.GetTable<input_word_header>();
			}
		}
		
		public System.Data.Linq.Table<meta_data_key> meta_data_keys
		{
			get
			{
				return this.GetTable<meta_data_key>();
			}
		}
		
		public System.Data.Linq.Table<meta_data_value> meta_data_values
		{
			get
			{
				return this.GetTable<meta_data_value>();
			}
		}
		
		public System.Data.Linq.Table<information_type> information_types
		{
			get
			{
				return this.GetTable<information_type>();
			}
		}
	}
	
	[Table(Name="dbo.analysis_result")]
	public partial class analysis_result : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _analysis_input_id;
		
		private int _information_type_id;
		
		private bool _is_read;
		
		private System.DateTime _event_time;
		
		private EntitySet<analysis_result_item> _analysis_result_items;
		
		private EntitySet<meta_data_value> _meta_data_values;
		
		private EntityRef<analysis_input> _analysis_input;
		
		private EntityRef<information_type> _information_type;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onanalysis_input_idChanging(int value);
    partial void Onanalysis_input_idChanged();
    partial void Oninformation_type_idChanging(int value);
    partial void Oninformation_type_idChanged();
    partial void Onis_readChanging(bool value);
    partial void Onis_readChanged();
    partial void Onevent_timeChanging(System.DateTime value);
    partial void Onevent_timeChanged();
    #endregion
		
		public analysis_result()
		{
			this._analysis_result_items = new EntitySet<analysis_result_item>(new Action<analysis_result_item>(this.attach_analysis_result_items), new Action<analysis_result_item>(this.detach_analysis_result_items));
			this._meta_data_values = new EntitySet<meta_data_value>(new Action<meta_data_value>(this.attach_meta_data_values), new Action<meta_data_value>(this.detach_meta_data_values));
			this._analysis_input = default(EntityRef<analysis_input>);
			this._information_type = default(EntityRef<information_type>);
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_analysis_input_id", DbType="Int NOT NULL")]
		public int analysis_input_id
		{
			get
			{
				return this._analysis_input_id;
			}
			set
			{
				if ((this._analysis_input_id != value))
				{
					if (this._analysis_input.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onanalysis_input_idChanging(value);
					this.SendPropertyChanging();
					this._analysis_input_id = value;
					this.SendPropertyChanged("analysis_input_id");
					this.Onanalysis_input_idChanged();
				}
			}
		}
		
		[Column(Storage="_information_type_id", DbType="Int NOT NULL")]
		public int information_type_id
		{
			get
			{
				return this._information_type_id;
			}
			set
			{
				if ((this._information_type_id != value))
				{
					if (this._information_type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oninformation_type_idChanging(value);
					this.SendPropertyChanging();
					this._information_type_id = value;
					this.SendPropertyChanged("information_type_id");
					this.Oninformation_type_idChanged();
				}
			}
		}
		
		[Column(Storage="_is_read", DbType="Bit NOT NULL")]
		public bool is_read
		{
			get
			{
				return this._is_read;
			}
			set
			{
				if ((this._is_read != value))
				{
					this.Onis_readChanging(value);
					this.SendPropertyChanging();
					this._is_read = value;
					this.SendPropertyChanged("is_read");
					this.Onis_readChanged();
				}
			}
		}
		
		[Column(Storage="_event_time", DbType="DateTime NOT NULL")]
		public System.DateTime event_time
		{
			get
			{
				return this._event_time;
			}
			set
			{
				if ((this._event_time != value))
				{
					this.Onevent_timeChanging(value);
					this.SendPropertyChanging();
					this._event_time = value;
					this.SendPropertyChanged("event_time");
					this.Onevent_timeChanged();
				}
			}
		}
		
		[Association(Name="analysis_result_analysis_result_item", Storage="_analysis_result_items", ThisKey="id", OtherKey="analysis_result_id")]
		public EntitySet<analysis_result_item> analysis_result_items
		{
			get
			{
				return this._analysis_result_items;
			}
			set
			{
				this._analysis_result_items.Assign(value);
			}
		}
		
		[Association(Name="analysis_result_meta_data_value", Storage="_meta_data_values", ThisKey="id", OtherKey="analysis_result_id")]
		public EntitySet<meta_data_value> meta_data_values
		{
			get
			{
				return this._meta_data_values;
			}
			set
			{
				this._meta_data_values.Assign(value);
			}
		}
		
		[Association(Name="analysis_input_analysis_result", Storage="_analysis_input", ThisKey="analysis_input_id", OtherKey="id", IsForeignKey=true)]
		public analysis_input analysis_input
		{
			get
			{
				return this._analysis_input.Entity;
			}
			set
			{
				analysis_input previousValue = this._analysis_input.Entity;
				if (((previousValue != value) 
							|| (this._analysis_input.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._analysis_input.Entity = null;
						previousValue.analysis_results.Remove(this);
					}
					this._analysis_input.Entity = value;
					if ((value != null))
					{
						value.analysis_results.Add(this);
						this._analysis_input_id = value.id;
					}
					else
					{
						this._analysis_input_id = default(int);
					}
					this.SendPropertyChanged("analysis_input");
				}
			}
		}
		
		[Association(Name="information_type_analysis_result", Storage="_information_type", ThisKey="information_type_id", OtherKey="id", IsForeignKey=true)]
		public information_type information_type
		{
			get
			{
				return this._information_type.Entity;
			}
			set
			{
				information_type previousValue = this._information_type.Entity;
				if (((previousValue != value) 
							|| (this._information_type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._information_type.Entity = null;
						previousValue.analysis_results.Remove(this);
					}
					this._information_type.Entity = value;
					if ((value != null))
					{
						value.analysis_results.Add(this);
						this._information_type_id = value.id;
					}
					else
					{
						this._information_type_id = default(int);
					}
					this.SendPropertyChanged("information_type");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_analysis_result_items(analysis_result_item entity)
		{
			this.SendPropertyChanging();
			entity.analysis_result = this;
		}
		
		private void detach_analysis_result_items(analysis_result_item entity)
		{
			this.SendPropertyChanging();
			entity.analysis_result = null;
		}
		
		private void attach_meta_data_values(meta_data_value entity)
		{
			this.SendPropertyChanging();
			entity.analysis_result = this;
		}
		
		private void detach_meta_data_values(meta_data_value entity)
		{
			this.SendPropertyChanging();
			entity.analysis_result = null;
		}
	}
	
	[Table(Name="dbo.analysis_input")]
	public partial class analysis_input : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _text_input;
		
		private string _status;
		
		private string _source_key1;
		
		private string _source_key2;
		
		private int _area_id;
		
		private System.DateTime _event_time;
		
		private EntitySet<analysis_result> _analysis_results;
		
		private EntitySet<input_meta_data> _input_meta_datas;
		
		private EntitySet<input_word_header> _input_word_headers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Ontext_inputChanging(string value);
    partial void Ontext_inputChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    partial void Onsource_key1Changing(string value);
    partial void Onsource_key1Changed();
    partial void Onsource_key2Changing(string value);
    partial void Onsource_key2Changed();
    partial void Onarea_idChanging(int value);
    partial void Onarea_idChanged();
    partial void Onevent_timeChanging(System.DateTime value);
    partial void Onevent_timeChanged();
    #endregion
		
		public analysis_input()
		{
			this._analysis_results = new EntitySet<analysis_result>(new Action<analysis_result>(this.attach_analysis_results), new Action<analysis_result>(this.detach_analysis_results));
			this._input_meta_datas = new EntitySet<input_meta_data>(new Action<input_meta_data>(this.attach_input_meta_datas), new Action<input_meta_data>(this.detach_input_meta_datas));
			this._input_word_headers = new EntitySet<input_word_header>(new Action<input_word_header>(this.attach_input_word_headers), new Action<input_word_header>(this.detach_input_word_headers));
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_text_input", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string text_input
		{
			get
			{
				return this._text_input;
			}
			set
			{
				if ((this._text_input != value))
				{
					this.Ontext_inputChanging(value);
					this.SendPropertyChanging();
					this._text_input = value;
					this.SendPropertyChanged("text_input");
					this.Ontext_inputChanged();
				}
			}
		}
		
		[Column(Storage="_status", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[Column(Storage="_source_key1", DbType="NVarChar(50)")]
		public string source_key1
		{
			get
			{
				return this._source_key1;
			}
			set
			{
				if ((this._source_key1 != value))
				{
					this.Onsource_key1Changing(value);
					this.SendPropertyChanging();
					this._source_key1 = value;
					this.SendPropertyChanged("source_key1");
					this.Onsource_key1Changed();
				}
			}
		}
		
		[Column(Storage="_source_key2", DbType="NVarChar(50)")]
		public string source_key2
		{
			get
			{
				return this._source_key2;
			}
			set
			{
				if ((this._source_key2 != value))
				{
					this.Onsource_key2Changing(value);
					this.SendPropertyChanging();
					this._source_key2 = value;
					this.SendPropertyChanged("source_key2");
					this.Onsource_key2Changed();
				}
			}
		}
		
		[Column(Storage="_area_id", DbType="Int NOT NULL")]
		public int area_id
		{
			get
			{
				return this._area_id;
			}
			set
			{
				if ((this._area_id != value))
				{
					this.Onarea_idChanging(value);
					this.SendPropertyChanging();
					this._area_id = value;
					this.SendPropertyChanged("area_id");
					this.Onarea_idChanged();
				}
			}
		}
		
		[Column(Storage="_event_time", DbType="DateTime NOT NULL")]
		public System.DateTime event_time
		{
			get
			{
				return this._event_time;
			}
			set
			{
				if ((this._event_time != value))
				{
					this.Onevent_timeChanging(value);
					this.SendPropertyChanging();
					this._event_time = value;
					this.SendPropertyChanged("event_time");
					this.Onevent_timeChanged();
				}
			}
		}
		
		[Association(Name="analysis_input_analysis_result", Storage="_analysis_results", ThisKey="id", OtherKey="analysis_input_id")]
		public EntitySet<analysis_result> analysis_results
		{
			get
			{
				return this._analysis_results;
			}
			set
			{
				this._analysis_results.Assign(value);
			}
		}
		
		[Association(Name="analysis_input_input_meta_data", Storage="_input_meta_datas", ThisKey="id", OtherKey="analysis_input_id")]
		public EntitySet<input_meta_data> input_meta_datas
		{
			get
			{
				return this._input_meta_datas;
			}
			set
			{
				this._input_meta_datas.Assign(value);
			}
		}
		
		[Association(Name="analysis_input_input_word_header", Storage="_input_word_headers", ThisKey="id", OtherKey="analysis_input_id")]
		public EntitySet<input_word_header> input_word_headers
		{
			get
			{
				return this._input_word_headers;
			}
			set
			{
				this._input_word_headers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_analysis_results(analysis_result entity)
		{
			this.SendPropertyChanging();
			entity.analysis_input = this;
		}
		
		private void detach_analysis_results(analysis_result entity)
		{
			this.SendPropertyChanging();
			entity.analysis_input = null;
		}
		
		private void attach_input_meta_datas(input_meta_data entity)
		{
			this.SendPropertyChanging();
			entity.analysis_input = this;
		}
		
		private void detach_input_meta_datas(input_meta_data entity)
		{
			this.SendPropertyChanging();
			entity.analysis_input = null;
		}
		
		private void attach_input_word_headers(input_word_header entity)
		{
			this.SendPropertyChanging();
			entity.analysis_input = this;
		}
		
		private void detach_input_word_headers(input_word_header entity)
		{
			this.SendPropertyChanging();
			entity.analysis_input = null;
		}
	}
	
	[Table(Name="dbo.analysis_result_item")]
	public partial class analysis_result_item : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _analysis_result_id;
		
		private string _word;
		
		private int _weight;
		
		private int _information_type_id;
		
		private System.DateTime _event_time;
		
		private EntityRef<analysis_result> _analysis_result;
		
		private EntityRef<information_type> _information_type;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onanalysis_result_idChanging(int value);
    partial void Onanalysis_result_idChanged();
    partial void OnwordChanging(string value);
    partial void OnwordChanged();
    partial void OnweightChanging(int value);
    partial void OnweightChanged();
    partial void Oninformation_type_idChanging(int value);
    partial void Oninformation_type_idChanged();
    partial void Onevent_timeChanging(System.DateTime value);
    partial void Onevent_timeChanged();
    #endregion
		
		public analysis_result_item()
		{
			this._analysis_result = default(EntityRef<analysis_result>);
			this._information_type = default(EntityRef<information_type>);
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_analysis_result_id", DbType="Int NOT NULL")]
		public int analysis_result_id
		{
			get
			{
				return this._analysis_result_id;
			}
			set
			{
				if ((this._analysis_result_id != value))
				{
					if (this._analysis_result.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onanalysis_result_idChanging(value);
					this.SendPropertyChanging();
					this._analysis_result_id = value;
					this.SendPropertyChanged("analysis_result_id");
					this.Onanalysis_result_idChanged();
				}
			}
		}
		
		[Column(Storage="_word", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string word
		{
			get
			{
				return this._word;
			}
			set
			{
				if ((this._word != value))
				{
					this.OnwordChanging(value);
					this.SendPropertyChanging();
					this._word = value;
					this.SendPropertyChanged("word");
					this.OnwordChanged();
				}
			}
		}
		
		[Column(Storage="_weight", DbType="Int NOT NULL")]
		public int weight
		{
			get
			{
				return this._weight;
			}
			set
			{
				if ((this._weight != value))
				{
					this.OnweightChanging(value);
					this.SendPropertyChanging();
					this._weight = value;
					this.SendPropertyChanged("weight");
					this.OnweightChanged();
				}
			}
		}
		
		[Column(Storage="_information_type_id", DbType="Int NOT NULL")]
		public int information_type_id
		{
			get
			{
				return this._information_type_id;
			}
			set
			{
				if ((this._information_type_id != value))
				{
					if (this._information_type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oninformation_type_idChanging(value);
					this.SendPropertyChanging();
					this._information_type_id = value;
					this.SendPropertyChanged("information_type_id");
					this.Oninformation_type_idChanged();
				}
			}
		}
		
		[Column(Storage="_event_time", DbType="DateTime NOT NULL")]
		public System.DateTime event_time
		{
			get
			{
				return this._event_time;
			}
			set
			{
				if ((this._event_time != value))
				{
					this.Onevent_timeChanging(value);
					this.SendPropertyChanging();
					this._event_time = value;
					this.SendPropertyChanged("event_time");
					this.Onevent_timeChanged();
				}
			}
		}
		
		[Association(Name="analysis_result_analysis_result_item", Storage="_analysis_result", ThisKey="analysis_result_id", OtherKey="id", IsForeignKey=true)]
		public analysis_result analysis_result
		{
			get
			{
				return this._analysis_result.Entity;
			}
			set
			{
				analysis_result previousValue = this._analysis_result.Entity;
				if (((previousValue != value) 
							|| (this._analysis_result.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._analysis_result.Entity = null;
						previousValue.analysis_result_items.Remove(this);
					}
					this._analysis_result.Entity = value;
					if ((value != null))
					{
						value.analysis_result_items.Add(this);
						this._analysis_result_id = value.id;
					}
					else
					{
						this._analysis_result_id = default(int);
					}
					this.SendPropertyChanged("analysis_result");
				}
			}
		}
		
		[Association(Name="information_type_analysis_result_item", Storage="_information_type", ThisKey="information_type_id", OtherKey="id", IsForeignKey=true)]
		public information_type information_type
		{
			get
			{
				return this._information_type.Entity;
			}
			set
			{
				information_type previousValue = this._information_type.Entity;
				if (((previousValue != value) 
							|| (this._information_type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._information_type.Entity = null;
						previousValue.analysis_result_items.Remove(this);
					}
					this._information_type.Entity = value;
					if ((value != null))
					{
						value.analysis_result_items.Add(this);
						this._information_type_id = value.id;
					}
					else
					{
						this._information_type_id = default(int);
					}
					this.SendPropertyChanged("information_type");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.input_meta_data")]
	public partial class input_meta_data : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _title;
		
		private string _meta_value;
		
		private int _analysis_input_id;
		
		private System.DateTime _event_time;
		
		private EntityRef<analysis_input> _analysis_input;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void Onmeta_valueChanging(string value);
    partial void Onmeta_valueChanged();
    partial void Onanalysis_input_idChanging(int value);
    partial void Onanalysis_input_idChanged();
    partial void Onevent_timeChanging(System.DateTime value);
    partial void Onevent_timeChanged();
    #endregion
		
		public input_meta_data()
		{
			this._analysis_input = default(EntityRef<analysis_input>);
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_title", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[Column(Storage="_meta_value", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string meta_value
		{
			get
			{
				return this._meta_value;
			}
			set
			{
				if ((this._meta_value != value))
				{
					this.Onmeta_valueChanging(value);
					this.SendPropertyChanging();
					this._meta_value = value;
					this.SendPropertyChanged("meta_value");
					this.Onmeta_valueChanged();
				}
			}
		}
		
		[Column(Storage="_analysis_input_id", DbType="Int NOT NULL")]
		public int analysis_input_id
		{
			get
			{
				return this._analysis_input_id;
			}
			set
			{
				if ((this._analysis_input_id != value))
				{
					if (this._analysis_input.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onanalysis_input_idChanging(value);
					this.SendPropertyChanging();
					this._analysis_input_id = value;
					this.SendPropertyChanged("analysis_input_id");
					this.Onanalysis_input_idChanged();
				}
			}
		}
		
		[Column(Storage="_event_time", DbType="DateTime NOT NULL")]
		public System.DateTime event_time
		{
			get
			{
				return this._event_time;
			}
			set
			{
				if ((this._event_time != value))
				{
					this.Onevent_timeChanging(value);
					this.SendPropertyChanging();
					this._event_time = value;
					this.SendPropertyChanged("event_time");
					this.Onevent_timeChanged();
				}
			}
		}
		
		[Association(Name="analysis_input_input_meta_data", Storage="_analysis_input", ThisKey="analysis_input_id", OtherKey="id", IsForeignKey=true)]
		public analysis_input analysis_input
		{
			get
			{
				return this._analysis_input.Entity;
			}
			set
			{
				analysis_input previousValue = this._analysis_input.Entity;
				if (((previousValue != value) 
							|| (this._analysis_input.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._analysis_input.Entity = null;
						previousValue.input_meta_datas.Remove(this);
					}
					this._analysis_input.Entity = value;
					if ((value != null))
					{
						value.input_meta_datas.Add(this);
						this._analysis_input_id = value.id;
					}
					else
					{
						this._analysis_input_id = default(int);
					}
					this.SendPropertyChanged("analysis_input");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.input_word_header")]
	public partial class input_word_header : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _word;
		
		private int _word_count;
		
		private int _analysis_input_id;
		
		private EntityRef<analysis_input> _analysis_input;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnwordChanging(string value);
    partial void OnwordChanged();
    partial void Onword_countChanging(int value);
    partial void Onword_countChanged();
    partial void Onanalysis_input_idChanging(int value);
    partial void Onanalysis_input_idChanged();
    #endregion
		
		public input_word_header()
		{
			this._analysis_input = default(EntityRef<analysis_input>);
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_word", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string word
		{
			get
			{
				return this._word;
			}
			set
			{
				if ((this._word != value))
				{
					this.OnwordChanging(value);
					this.SendPropertyChanging();
					this._word = value;
					this.SendPropertyChanged("word");
					this.OnwordChanged();
				}
			}
		}
		
		[Column(Storage="_word_count", DbType="Int NOT NULL")]
		public int word_count
		{
			get
			{
				return this._word_count;
			}
			set
			{
				if ((this._word_count != value))
				{
					this.Onword_countChanging(value);
					this.SendPropertyChanging();
					this._word_count = value;
					this.SendPropertyChanged("word_count");
					this.Onword_countChanged();
				}
			}
		}
		
		[Column(Storage="_analysis_input_id", DbType="Int NOT NULL")]
		public int analysis_input_id
		{
			get
			{
				return this._analysis_input_id;
			}
			set
			{
				if ((this._analysis_input_id != value))
				{
					if (this._analysis_input.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onanalysis_input_idChanging(value);
					this.SendPropertyChanging();
					this._analysis_input_id = value;
					this.SendPropertyChanged("analysis_input_id");
					this.Onanalysis_input_idChanged();
				}
			}
		}
		
		[Association(Name="analysis_input_input_word_header", Storage="_analysis_input", ThisKey="analysis_input_id", OtherKey="id", IsForeignKey=true)]
		public analysis_input analysis_input
		{
			get
			{
				return this._analysis_input.Entity;
			}
			set
			{
				analysis_input previousValue = this._analysis_input.Entity;
				if (((previousValue != value) 
							|| (this._analysis_input.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._analysis_input.Entity = null;
						previousValue.input_word_headers.Remove(this);
					}
					this._analysis_input.Entity = value;
					if ((value != null))
					{
						value.input_word_headers.Add(this);
						this._analysis_input_id = value.id;
					}
					else
					{
						this._analysis_input_id = default(int);
					}
					this.SendPropertyChanged("analysis_input");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.meta_data_key")]
	public partial class meta_data_key : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _title;
		
		private string _regex;
		
		private int _information_type_id;
		
		private bool _deleted;
		
		private System.DateTime _event_time;
		
		private EntitySet<meta_data_value> _meta_data_values;
		
		private EntityRef<information_type> _information_type;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OnregexChanging(string value);
    partial void OnregexChanged();
    partial void Oninformation_type_idChanging(int value);
    partial void Oninformation_type_idChanged();
    partial void OndeletedChanging(bool value);
    partial void OndeletedChanged();
    partial void Onevent_timeChanging(System.DateTime value);
    partial void Onevent_timeChanged();
    #endregion
		
		public meta_data_key()
		{
			this._meta_data_values = new EntitySet<meta_data_value>(new Action<meta_data_value>(this.attach_meta_data_values), new Action<meta_data_value>(this.detach_meta_data_values));
			this._information_type = default(EntityRef<information_type>);
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_title", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[Column(Storage="_regex", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string regex
		{
			get
			{
				return this._regex;
			}
			set
			{
				if ((this._regex != value))
				{
					this.OnregexChanging(value);
					this.SendPropertyChanging();
					this._regex = value;
					this.SendPropertyChanged("regex");
					this.OnregexChanged();
				}
			}
		}
		
		[Column(Storage="_information_type_id", DbType="Int NOT NULL")]
		public int information_type_id
		{
			get
			{
				return this._information_type_id;
			}
			set
			{
				if ((this._information_type_id != value))
				{
					if (this._information_type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oninformation_type_idChanging(value);
					this.SendPropertyChanging();
					this._information_type_id = value;
					this.SendPropertyChanged("information_type_id");
					this.Oninformation_type_idChanged();
				}
			}
		}
		
		[Column(Storage="_deleted", DbType="Bit NOT NULL")]
		public bool deleted
		{
			get
			{
				return this._deleted;
			}
			set
			{
				if ((this._deleted != value))
				{
					this.OndeletedChanging(value);
					this.SendPropertyChanging();
					this._deleted = value;
					this.SendPropertyChanged("deleted");
					this.OndeletedChanged();
				}
			}
		}
		
		[Column(Storage="_event_time", DbType="DateTime NOT NULL")]
		public System.DateTime event_time
		{
			get
			{
				return this._event_time;
			}
			set
			{
				if ((this._event_time != value))
				{
					this.Onevent_timeChanging(value);
					this.SendPropertyChanging();
					this._event_time = value;
					this.SendPropertyChanged("event_time");
					this.Onevent_timeChanged();
				}
			}
		}
		
		[Association(Name="meta_data_key_meta_data_value", Storage="_meta_data_values", ThisKey="id", OtherKey="meta_data_key_id")]
		public EntitySet<meta_data_value> meta_data_values
		{
			get
			{
				return this._meta_data_values;
			}
			set
			{
				this._meta_data_values.Assign(value);
			}
		}
		
		[Association(Name="information_type_meta_data_key", Storage="_information_type", ThisKey="information_type_id", OtherKey="id", IsForeignKey=true)]
		public information_type information_type
		{
			get
			{
				return this._information_type.Entity;
			}
			set
			{
				information_type previousValue = this._information_type.Entity;
				if (((previousValue != value) 
							|| (this._information_type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._information_type.Entity = null;
						previousValue.meta_data_keys.Remove(this);
					}
					this._information_type.Entity = value;
					if ((value != null))
					{
						value.meta_data_keys.Add(this);
						this._information_type_id = value.id;
					}
					else
					{
						this._information_type_id = default(int);
					}
					this.SendPropertyChanged("information_type");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_meta_data_values(meta_data_value entity)
		{
			this.SendPropertyChanging();
			entity.meta_data_key = this;
		}
		
		private void detach_meta_data_values(meta_data_value entity)
		{
			this.SendPropertyChanging();
			entity.meta_data_key = null;
		}
	}
	
	[Table(Name="dbo.meta_data_value")]
	public partial class meta_data_value : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _meta_value;
		
		private int _meta_data_key_id;
		
		private int _analysis_result_id;
		
		private System.DateTime _event_time;
		
		private EntityRef<analysis_result> _analysis_result;
		
		private EntityRef<meta_data_key> _meta_data_key;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onmeta_valueChanging(string value);
    partial void Onmeta_valueChanged();
    partial void Onmeta_data_key_idChanging(int value);
    partial void Onmeta_data_key_idChanged();
    partial void Onanalysis_result_idChanging(int value);
    partial void Onanalysis_result_idChanged();
    partial void Onevent_timeChanging(System.DateTime value);
    partial void Onevent_timeChanged();
    #endregion
		
		public meta_data_value()
		{
			this._analysis_result = default(EntityRef<analysis_result>);
			this._meta_data_key = default(EntityRef<meta_data_key>);
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_meta_value", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string meta_value
		{
			get
			{
				return this._meta_value;
			}
			set
			{
				if ((this._meta_value != value))
				{
					this.Onmeta_valueChanging(value);
					this.SendPropertyChanging();
					this._meta_value = value;
					this.SendPropertyChanged("meta_value");
					this.Onmeta_valueChanged();
				}
			}
		}
		
		[Column(Storage="_meta_data_key_id", DbType="Int NOT NULL")]
		public int meta_data_key_id
		{
			get
			{
				return this._meta_data_key_id;
			}
			set
			{
				if ((this._meta_data_key_id != value))
				{
					if (this._meta_data_key.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onmeta_data_key_idChanging(value);
					this.SendPropertyChanging();
					this._meta_data_key_id = value;
					this.SendPropertyChanged("meta_data_key_id");
					this.Onmeta_data_key_idChanged();
				}
			}
		}
		
		[Column(Storage="_analysis_result_id", DbType="Int NOT NULL")]
		public int analysis_result_id
		{
			get
			{
				return this._analysis_result_id;
			}
			set
			{
				if ((this._analysis_result_id != value))
				{
					if (this._analysis_result.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onanalysis_result_idChanging(value);
					this.SendPropertyChanging();
					this._analysis_result_id = value;
					this.SendPropertyChanged("analysis_result_id");
					this.Onanalysis_result_idChanged();
				}
			}
		}
		
		[Column(Storage="_event_time", DbType="DateTime NOT NULL")]
		public System.DateTime event_time
		{
			get
			{
				return this._event_time;
			}
			set
			{
				if ((this._event_time != value))
				{
					this.Onevent_timeChanging(value);
					this.SendPropertyChanging();
					this._event_time = value;
					this.SendPropertyChanged("event_time");
					this.Onevent_timeChanged();
				}
			}
		}
		
		[Association(Name="analysis_result_meta_data_value", Storage="_analysis_result", ThisKey="analysis_result_id", OtherKey="id", IsForeignKey=true)]
		public analysis_result analysis_result
		{
			get
			{
				return this._analysis_result.Entity;
			}
			set
			{
				analysis_result previousValue = this._analysis_result.Entity;
				if (((previousValue != value) 
							|| (this._analysis_result.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._analysis_result.Entity = null;
						previousValue.meta_data_values.Remove(this);
					}
					this._analysis_result.Entity = value;
					if ((value != null))
					{
						value.meta_data_values.Add(this);
						this._analysis_result_id = value.id;
					}
					else
					{
						this._analysis_result_id = default(int);
					}
					this.SendPropertyChanged("analysis_result");
				}
			}
		}
		
		[Association(Name="meta_data_key_meta_data_value", Storage="_meta_data_key", ThisKey="meta_data_key_id", OtherKey="id", IsForeignKey=true)]
		public meta_data_key meta_data_key
		{
			get
			{
				return this._meta_data_key.Entity;
			}
			set
			{
				meta_data_key previousValue = this._meta_data_key.Entity;
				if (((previousValue != value) 
							|| (this._meta_data_key.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._meta_data_key.Entity = null;
						previousValue.meta_data_values.Remove(this);
					}
					this._meta_data_key.Entity = value;
					if ((value != null))
					{
						value.meta_data_values.Add(this);
						this._meta_data_key_id = value.id;
					}
					else
					{
						this._meta_data_key_id = default(int);
					}
					this.SendPropertyChanged("meta_data_key");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.information_type")]
	public partial class information_type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _title;
		
		private int _possible_limit;
		
		private int _certain_limit;
		
		private System.Nullable<int> _parent_id;
		
		private int _area_id;
		
		private System.DateTime _event_time;
		
		private EntitySet<analysis_result> _analysis_results;
		
		private EntitySet<analysis_result_item> _analysis_result_items;
		
		private EntitySet<meta_data_key> _meta_data_keys;
		
		private EntityRef<information_type> _information_type2;
		
		private EntityRef<information_type> _information_type1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void Onpossible_limitChanging(int value);
    partial void Onpossible_limitChanged();
    partial void Oncertain_limitChanging(int value);
    partial void Oncertain_limitChanged();
    partial void Onparent_idChanging(System.Nullable<int> value);
    partial void Onparent_idChanged();
    partial void Onarea_idChanging(int value);
    partial void Onarea_idChanged();
    partial void Onevent_timeChanging(System.DateTime value);
    partial void Onevent_timeChanged();
    #endregion
		
		public information_type()
		{
			this._analysis_results = new EntitySet<analysis_result>(new Action<analysis_result>(this.attach_analysis_results), new Action<analysis_result>(this.detach_analysis_results));
			this._analysis_result_items = new EntitySet<analysis_result_item>(new Action<analysis_result_item>(this.attach_analysis_result_items), new Action<analysis_result_item>(this.detach_analysis_result_items));
			this._meta_data_keys = new EntitySet<meta_data_key>(new Action<meta_data_key>(this.attach_meta_data_keys), new Action<meta_data_key>(this.detach_meta_data_keys));
			this._information_type2 = default(EntityRef<information_type>);
			this._information_type1 = default(EntityRef<information_type>);
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._information_type1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_title", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[Column(Storage="_possible_limit", DbType="Int NOT NULL")]
		public int possible_limit
		{
			get
			{
				return this._possible_limit;
			}
			set
			{
				if ((this._possible_limit != value))
				{
					this.Onpossible_limitChanging(value);
					this.SendPropertyChanging();
					this._possible_limit = value;
					this.SendPropertyChanged("possible_limit");
					this.Onpossible_limitChanged();
				}
			}
		}
		
		[Column(Storage="_certain_limit", DbType="Int NOT NULL")]
		public int certain_limit
		{
			get
			{
				return this._certain_limit;
			}
			set
			{
				if ((this._certain_limit != value))
				{
					this.Oncertain_limitChanging(value);
					this.SendPropertyChanging();
					this._certain_limit = value;
					this.SendPropertyChanged("certain_limit");
					this.Oncertain_limitChanged();
				}
			}
		}
		
		[Column(Storage="_parent_id", DbType="Int")]
		public System.Nullable<int> parent_id
		{
			get
			{
				return this._parent_id;
			}
			set
			{
				if ((this._parent_id != value))
				{
					this.Onparent_idChanging(value);
					this.SendPropertyChanging();
					this._parent_id = value;
					this.SendPropertyChanged("parent_id");
					this.Onparent_idChanged();
				}
			}
		}
		
		[Column(Storage="_area_id", DbType="Int NOT NULL")]
		public int area_id
		{
			get
			{
				return this._area_id;
			}
			set
			{
				if ((this._area_id != value))
				{
					this.Onarea_idChanging(value);
					this.SendPropertyChanging();
					this._area_id = value;
					this.SendPropertyChanged("area_id");
					this.Onarea_idChanged();
				}
			}
		}
		
		[Column(Storage="_event_time", DbType="DateTime NOT NULL")]
		public System.DateTime event_time
		{
			get
			{
				return this._event_time;
			}
			set
			{
				if ((this._event_time != value))
				{
					this.Onevent_timeChanging(value);
					this.SendPropertyChanging();
					this._event_time = value;
					this.SendPropertyChanged("event_time");
					this.Onevent_timeChanged();
				}
			}
		}
		
		[Association(Name="information_type_analysis_result", Storage="_analysis_results", ThisKey="id", OtherKey="information_type_id")]
		public EntitySet<analysis_result> analysis_results
		{
			get
			{
				return this._analysis_results;
			}
			set
			{
				this._analysis_results.Assign(value);
			}
		}
		
		[Association(Name="information_type_analysis_result_item", Storage="_analysis_result_items", ThisKey="id", OtherKey="information_type_id")]
		public EntitySet<analysis_result_item> analysis_result_items
		{
			get
			{
				return this._analysis_result_items;
			}
			set
			{
				this._analysis_result_items.Assign(value);
			}
		}
		
		[Association(Name="information_type_meta_data_key", Storage="_meta_data_keys", ThisKey="id", OtherKey="information_type_id")]
		public EntitySet<meta_data_key> meta_data_keys
		{
			get
			{
				return this._meta_data_keys;
			}
			set
			{
				this._meta_data_keys.Assign(value);
			}
		}
		
		[Association(Name="information_type_information_type", Storage="_information_type2", ThisKey="id", OtherKey="id", IsUnique=true, IsForeignKey=false)]
		public information_type information_type2
		{
			get
			{
				return this._information_type2.Entity;
			}
			set
			{
				information_type previousValue = this._information_type2.Entity;
				if (((previousValue != value) 
							|| (this._information_type2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._information_type2.Entity = null;
						previousValue.information_type1 = null;
					}
					this._information_type2.Entity = value;
					if ((value != null))
					{
						value.information_type1 = this;
					}
					this.SendPropertyChanged("information_type2");
				}
			}
		}
		
		[Association(Name="information_type_information_type", Storage="_information_type1", ThisKey="id", OtherKey="id", IsForeignKey=true)]
		public information_type information_type1
		{
			get
			{
				return this._information_type1.Entity;
			}
			set
			{
				information_type previousValue = this._information_type1.Entity;
				if (((previousValue != value) 
							|| (this._information_type1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._information_type1.Entity = null;
						previousValue.information_type2 = null;
					}
					this._information_type1.Entity = value;
					if ((value != null))
					{
						value.information_type2 = this;
						this._id = value.id;
					}
					else
					{
						this._id = default(int);
					}
					this.SendPropertyChanged("information_type1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_analysis_results(analysis_result entity)
		{
			this.SendPropertyChanging();
			entity.information_type = this;
		}
		
		private void detach_analysis_results(analysis_result entity)
		{
			this.SendPropertyChanging();
			entity.information_type = null;
		}
		
		private void attach_analysis_result_items(analysis_result_item entity)
		{
			this.SendPropertyChanging();
			entity.information_type = this;
		}
		
		private void detach_analysis_result_items(analysis_result_item entity)
		{
			this.SendPropertyChanging();
			entity.information_type = null;
		}
		
		private void attach_meta_data_keys(meta_data_key entity)
		{
			this.SendPropertyChanging();
			entity.information_type = this;
		}
		
		private void detach_meta_data_keys(meta_data_key entity)
		{
			this.SendPropertyChanging();
			entity.information_type = null;
		}
	}
}
#pragma warning restore 1591
